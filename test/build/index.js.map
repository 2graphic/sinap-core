{"version":3,"sources":["webpack/bootstrap 394b3794bb0113b628f6","external \"assert\"","/Users/sheyne/Documents/sinap-core/src/index.ts","external \"typescript\"","/Users/sheyne/Documents/sinap-core/src/element.ts","/Users/sheyne/Documents/sinap-core/src/plugin-loader.ts","/Users/sheyne/Documents/sinap-core/src/plugin.ts","/Users/sheyne/Documents/sinap-core/src/types.ts","/Users/sheyne/Documents/sinap-core/test/test-current-dfa-interpreter.ts","/Users/sheyne/Documents/sinap-core/test/test-ideal-dfa-interpreter.ts","/Users/sheyne/Documents/sinap-core/test/test-serialization.ts","/Users/sheyne/Documents/sinap-core/test/test-validation.ts","/Users/sheyne/Documents/sinap-core/sinap-includes/amd-loader.js","/Users/sheyne/Documents/sinap-core/sinap-includes/plugin-stub.ts","/Users/sheyne/Documents/sinap-core/sinap-includes/sinap.d.ts","/Users/sheyne/Documents/sinap-core/sinap-includes/types-interfaces.d.ts","/Users/sheyne/Documents/sinap-core/test/dfa-definitions.ts","external \"fs\""],"names":[],"mappings":"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","file":"./test/build/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 394b3794bb0113b628f6","module.exports = require(\"assert\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"assert\"\n// module id = 0\n// module chunks = 0","export * from \"../sinap-includes/sinap\";\nexport * from \"./types\";\nexport * from \"./plugin-loader\";\nexport * from \"./element\";\nexport * from \"./plugin\";\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","module.exports = require(\"typescript\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"typescript\"\n// module id = 2\n// module chunks = 0","import { ObjectType } from \"./types\";\nimport { Plugin } from \"./plugin\";\n\nexport enum CoreElementKind { Node, Edge, Graph };\n\nexport class CoreElement {\n    data: { [a: string]: any };\n\n    constructor(readonly type: ObjectType, readonly kind: CoreElementKind) {\n        this.data = {};\n    }\n}\n\nexport type SerialJSO = {\n    format: string,\n    kind: string,\n    version: string,\n    elements: {kind: string, type: string, data: any}[],\n};\n\nexport class CoreModel {\n    elements: CoreElement[];\n\n    /**\n     * Modifies pojo\n     */\n    constructor(private plugin: Plugin, pojo: SerialJSO) {\n        // TODO: check correct plugin kind\n        if (pojo.format !== \"sinap-file-format\" || pojo.version !== \"0.0.6\"){\n            throw \"not a CoreModel\";\n        }\n\n        this.elements = pojo.elements.map((e) => this.plugin.makeElement(CoreElementKind[e.kind as any] as any, e.type));\n\n        // TODO: typecheck all values against plugin-declared. \n        const traverse = (a: any) => {\n            if (typeof(a) !== \"object\"){\n                return;\n            }\n            for (const k of Object.getOwnPropertyNames(a)) {\n                const el = a[k];\n                if (el.kind === \"sinap-pointer\") {\n                    a[k] = this.elements[el.index];\n                } else {\n                    traverse(el);\n                }\n            }\n        }    \n\n        traverse(pojo.elements);\n\n        for (let i = 0; i < pojo.elements.length; i++) {\n            this.elements[i].data = pojo.elements[i].data;\n        }\n    }\n\n    serialize(): SerialJSO {\n        return {\n            format: \"sinap-file-format\",\n            kind: \"TODO: implement this\",\n            version: \"0.0.6\",\n            elements: this.elements.map((element)=>{\n                return {\n                    kind: CoreElementKind[element.kind],\n                    type: element.type.name,\n                    data: JSON.parse(JSON.stringify(element.data, (_, v)=>{\n                        const idx = this.elements.indexOf(v);\n                        if (idx !== -1) {\n                            return {\n                                kind: \"sinap-pointer\",\n                                index: idx,\n                            };\n                        }\n                        return v;\n                    })),\n                };\n            }),\n        };\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/element.ts","import * as ts from \"typescript\";\nimport * as fs from \"fs\";\n\nimport { Plugin } from \"./plugin\";\n\nconst options: ts.CompilerOptions = {\n    noEmitOnError: false,\n    noImplicitAny: true,\n    target: ts.ScriptTarget.ES2016,\n    removeComments: false,\n    module: ts.ModuleKind.AMD,\n    outFile: \"result.js\",\n};\n\n/**\n * An abstract representation of a plugin \n */\nexport function loadPlugin(pluginLocation: string) {\n    let script: string | undefined = undefined;\n    const host = createCompilerHost(new Map([\n        [\"plugin.ts\", fs.readFileSync(pluginLocation, \"utf-8\")],\n        [\"plugin-stub.ts\", require(\"!!raw-loader!../sinap-includes/plugin-stub.ts\")],\n        [\"sinap.d.ts\", require(\"!!raw-loader!../sinap-includes/sinap.d.ts\")],\n        [\"types-interfaces.d.ts\", require(\"!!raw-loader!../sinap-includes/types-interfaces.d.ts\")],\n    ]), options, (_, content) => {\n        // TODO: actually use AMD for cicular dependencies\n        script = require(\"!!raw-loader!../sinap-includes/amd-loader.js\") + \"\\n\" + content;\n    });\n\n    const program = ts.createProgram([\"plugin-stub.ts\"], options, host);\n\n    const results = program.emit();\n    return new Plugin(program, { emitResults: results, js: script });\n}\n\nexport function printDiagnostics(results: ts.EmitResult) {\n    for (const result of results.diagnostics) {\n        console.log()\n        if (result.file) {\n            const { line, character } = result.file.getLineAndCharacterOfPosition(result.start);\n            const starts = result.file.getLineStarts();\n            console.log(result.file.fileName, line.toString() + \", \" + character.toString() + \":\", result.messageText);\n            console.log(result.file.text.substring(starts[line], starts[line + 1] - 1).replace(\"\\t\", \" \"));\n            let pad = \"\";\n            for (let i = 0; i < character; i++) {\n                pad += \" \";\n            }\n            for (let i = 0; i < result.length; i++) {\n                pad += \"~\";\n            }\n            console.log(pad);\n        } else {\n            console.log(\"unknown file:\", result.messageText);\n        }\n    }\n    console.log(\"Emit Skipped?\", results.emitSkipped)\n}\n\nfunction createCompilerHost(files: Map<string, string>, options: ts.CompilerOptions, emit: (name: string, content: string) => void): ts.CompilerHost {\n    return {\n        getSourceFile: (fileName) => {\n            let source = files.get(fileName);\n            if (!source) {\n                // if we didn't bundle the source file, maybe it's a lib? \n                if (fileName.indexOf(\"/\") !== -1) {\n                    throw \"no relative/absolute paths here\";\n                }\n                source = fs.readFileSync(\"node_modules/typescript/lib/\" + fileName, \"utf-8\");\n            }\n\n            // any to suppress strict error about undefined\n            return source ?\n                ts.createSourceFile(fileName, source, options.target ? options.target : ts.ScriptTarget.ES2016)\n                : undefined as any;\n        },\n        writeFile: (name, text) => {\n            emit(name, text);\n        },\n        getDefaultLibFileName: () => {\n            return \"lib.es2016.d.ts\";\n        },\n        useCaseSensitiveFileNames: () => false,\n        getCanonicalFileName: fileName => fileName,\n        getCurrentDirectory: () => \"\",\n        getNewLine: () => \"\\n\",\n        fileExists: (fileName): boolean => {\n            return files.has(fileName)\n        },\n        readFile: () => \"\",\n        directoryExists: () => true,\n        getDirectories: () => []\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/plugin-loader.ts","import * as ts from \"typescript\";\nimport { CoreElementKind, CoreElement } from \"./element\";\nimport { TypeEnvironment, getTypes, Type, UnionType, ObjectType } from \"./types\";\nimport { printDiagnostics } from \"../src/plugin-loader\";\n\nfunction unionToList(type: Type): [string, ObjectType][] {\n    if (type instanceof UnionType) {\n        return type.types.map(unionToList).reduce((p, c) => p.concat(c));\n    } else if (type instanceof ObjectType) {\n        return [[type.name, type]];\n    }\n    throw `type must be a union type or an object type.`\n\n}\n\nfunction kindToKey(kind: CoreElementKind): string {\n    switch (kind) {\n        case CoreElementKind.Edge:\n            return \"Edges\";\n        case CoreElementKind.Node:\n            return \"Nodes\";\n        case CoreElementKind.Graph:\n            return \"Graph\";\n    }\n}\n\n\nexport class PluginTypeEnvironment extends TypeEnvironment {\n    private pluginTypes: Map<string, Map<string, ObjectType>>;\n    constructor(program: ts.Program) {\n        super(program.getTypeChecker());\n\n        // TODO: magic \"plugin.ts\" string\n        const types = getTypes(this, program.getSourceFile(\"plugin.ts\"), new Set([\"Nodes\", \"Edges\", \"Graph\"]));\n        this.pluginTypes = new Map([...types.entries()]\n            .map(([n, v]) => [n, new Map(unionToList(v))] as [string, Map<string, ObjectType>]));\n    }\n\n    elementTypes(kind: CoreElementKind) {\n        const type = this.pluginTypes.get(kindToKey(kind));\n        if (type === undefined) {\n            throw \"kind not found\";\n        }\n        return type.keys();\n    }\n\n    getElementType(kind: CoreElementKind, type: string): ObjectType {\n        const t = this.pluginTypes.get(kindToKey(kind));\n        if (t === undefined) {\n            throw \"kind not found\";\n        }\n        const ty = t.get(type);\n        if (ty === undefined) {\n            throw \"type not found\";\n        }\n        return ty;\n    }\n}\n\nexport class Plugin {\n    public typeEnvironment: PluginTypeEnvironment;\n\n    constructor(program: ts.Program, public results: { js: string | undefined, emitResults: ts.EmitResult }) {\n        this.typeEnvironment = new PluginTypeEnvironment(program);\n    }\n\n    // TODO: remove\n    public printResults() {\n        printDiagnostics(this.results.emitResults);\n    }\n\n    makeElement(kind: CoreElementKind, type?: string) {\n        if (type === undefined) {\n            type = this.elementTypes(kind).next().value;\n        }\n        return new CoreElement(this.typeEnvironment.getElementType(kind, type), kind);\n    }\n\n    elementTypes(kind: CoreElementKind) {\n        return this.typeEnvironment.elementTypes(kind);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/plugin.ts","import * as ts from \"typescript\";\nimport * as interfaces from \"../sinap-includes/types-interfaces\";\n\n/**\n * Store a mapping of typescript types to our wrappers.\n * \n * In order to avoid infinite loops, we need to cache the ones\n * that we find. \n */\nexport class TypeEnvironment {\n    private types = new Map<ts.Type, Type>();\n\n    constructor(public checker: ts.TypeChecker) {\n    }\n\n    getType(type: ts.Type) {\n        const t = this.types.get(type);\n        if (t) {\n            return t;\n        }\n        let wrapped: Type;\n        if (type.flags & ts.TypeFlags.Union) {\n            wrapped = new UnionType(this, type as ts.UnionType);\n        } else if (type.flags & ts.TypeFlags.Intersection) {\n            wrapped = new IntersectionType(this, type as ts.IntersectionType);\n        } else if (type.flags & ts.TypeFlags.Object) {\n            wrapped = new ObjectType(this, type as ts.ObjectType);\n        } else {\n            wrapped = new Type(this, type);\n        }\n        this.types.set(type, wrapped);\n        return wrapped;\n    }\n}\n\nexport class Type implements interfaces.Type {\n    readonly name: string;\n    // TODO: protect the arguments\n    /**\n     * Never call this manually, use getType on the appropriate \n     * TypeEnvironment\n     */\n    constructor(public env: TypeEnvironment, public type: ts.Type) {\n        this.name = env.checker.typeToString(type);\n    }\n\n    /**\n     * Return if this type is assignable to that type\n     */\n    public isAssignableTo(that: Type) {\n        return this.env.checker.isAssignableTo(this.type, that.type);\n    }\n}\n\nexport class UnionType extends Type implements interfaces.UnionType {\n    types: Type[];\n\n    constructor(env: TypeEnvironment, type: ts.UnionType) {\n        super(env, type);\n        this.types = type.types.map(t => this.env.getType(t));\n    }\n}\n\nexport class IntersectionType extends Type implements interfaces.IntersectionType {\n    types: Type[];\n\n    constructor(env: TypeEnvironment, type: ts.IntersectionType) {\n        super(env, type);\n        this.types = type.types.map(t => this.env.getType(t));\n    }\n}\n\nexport class ObjectType extends Type implements interfaces.ObjectType {\n    readonly members = new Map<string, Type>();\n\n    constructor(env: TypeEnvironment, type: ts.ObjectType) {\n        super(env, type);\n        if (this.type.symbol === undefined || this.type.symbol.members === undefined) {\n            //throw \"not an object type\";\n            // TODO: address this\n            return;\n        }\n        this.type.symbol.members.forEach((value, key) => {\n            this.members.set(key, this.env.getType(this.env.checker.getTypeOfSymbol(value)));\n        });\n    }\n}\n\n/**\n * For each name in `searchNames` look for the \n * the type that that symbol is declared as in SourceFile\n * and return the wrapped declared type. \n */\nexport function getTypes(env: TypeEnvironment, file: ts.SourceFile, searchNames: Set<string>): Map<string, Type> {\n    const results = new Map([...searchNames].map((x) => [x, new Set()] as [string, Set<Type>]));\n    // TODO: I'm going to need this\n    // ts.forEachChild(file, (parent)=>{\n    //if (parent.kind === ts.SyntaxKind.ModuleDeclaration){\n    ts.forEachChild(file, (node) => {\n        // if it's not a class, and interface, or an\n        // alias, we don't care about it\n        if (!(node.kind === ts.SyntaxKind.ClassDeclaration\n            || node.kind === ts.SyntaxKind.InterfaceDeclaration\n            || node.kind === ts.SyntaxKind.TypeAliasDeclaration)) {\n            return;\n        }\n\n        // declaration is the literal characters matched by the \n        // parser in the source file\n        const declaration = node as ts.InterfaceDeclaration | ts.ClassDeclaration | ts.TypeAliasDeclaration;\n\n        // symbol is 1 layer of abstraction on the declaration\n        // I'm not sure exactly what purpose it serves\n        if (declaration.name === undefined) {\n            return;\n        }\n        const symbol = env.checker.getSymbolAtLocation(declaration.name);\n\n        // if `symbol.name` is something we're looking for\n        // then r is a set\n        const r = results.get(symbol.name);\n\n        if (!r) {\n            return;\n        }\n        // add node to to matches for `symbol.name`\n        if (node.kind === ts.SyntaxKind.TypeAliasDeclaration) {\n            // need to follow aliases\n            visitAlias(node, r);\n        } else {\n            r.add(env.getType(env.checker.getTypeOfSymbol(symbol)));\n        }\n        // });\n        // }\n    });\n\n    // check the sets all contain 1 element and convert to a mapping\n    // that points straight to that element\n    return new Map([...results.entries()]\n        .map(([k, v]) => {\n            if (v.size !== 1) {\n                throw \"Redunadant type specification\";\n            }\n            return [k, v.values().next().value] as [string, Type];\n        }));\n\n    // helper for aliases.\n    function visitAlias(parent: ts.Node, r: Set<Type>): void {\n        ts.forEachChild(parent, (node) => {\n            // aliases have two children,\n            // the first is the name that is being undefined\n            // it is of type: ts.SyntaxKind.Identifier\n            // and the second is what we're looking for\n            // it's probably a union in our use case. \n            if (node.kind !== ts.SyntaxKind.Identifier && node.kind !== ts.SyntaxKind.ExportKeyword) {\n                r.add(env.getType(env.checker.getTypeAtLocation(node)));\n            }\n        });\n    }\n}\n\nexport function validateEdge(edge: ObjectType, source?: ObjectType, destination?: ObjectType): boolean {\n    const destinationExpected = edge !== undefined ? edge.members.get(\"destination\") : null;\n    const sourceExpected = edge !== undefined ? edge.members.get(\"source\") : null;\n\n    // constrain that 0th is assignable to 1st\n    const constraints: [Type, Type][] = [];\n\n    if (destinationExpected && destination) {\n        constraints.push([destination, destinationExpected]);\n    }\n\n    if (sourceExpected && source) {\n        constraints.push([source, sourceExpected]);\n    }\n\n    // constrain that the edge is assignable to the child array\n    // and the parent array of the source and destination nodes\n    // respectively\n    if (destination !== undefined) {\n        addParentChildConstraint(destination.members.get(\"parents\"));\n    }\n    if (source !== undefined) {\n        addParentChildConstraint(source.members.get(\"children\"));\n    }\n\n    function addParentChildConstraint(listType?: Type) {\n        // if there is actually the field declared\n        if (listType) {\n            if (listType.type.flags & ts.TypeFlags.Object) {\n                const obj = listType.type as ts.ObjectType;\n                if (obj.objectFlags & ts.ObjectFlags.Reference) {\n                    const ref = obj as ts.TypeReference;\n                    constraints.push([edge, listType.env.getType(ref.typeArguments[0])]);\n                } else {\n                    // don't care if there is a parents/child field\n                    // but if there is, it better be a list\n                    throw \"parents/children must be a reference to an array type\"\n                }\n            } else {\n                // don't care if there is a parents/child field\n                // but if there is, it better be a list\n                throw \"parents/children must be a reference to an array type\"\n            }\n        }\n    }\n\n    return constraints.reduce((prev, [t1, t2]) => prev ? t1.isAssignableTo(t2) : false, true);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/types.ts","/// <reference path=\"../typings/globals/mocha/index.d.ts\" />\nimport { loadPlugin } from \"../src/\";\nimport * as assert from \"assert\";\n\ndescribe(\"plugin loader\", ()=>\n    it(\"emit results\", ()=>{\n    const plugin = loadPlugin(\"test/plugin1.ts\");\n    assert.equal(false, plugin.results.emitResults.emitSkipped);\n}));\n\n\n// WEBPACK FOOTER //\n// ./test/test-current-dfa-interpreter.ts","/// <reference path=\"../typings/globals/mocha/index.d.ts\" />\nimport { interpret, DFAGraph } from \"./dfa-definitions\";\nimport * as assert from \"assert\";\n\ndescribe(\"run the ideal interpreter v1\", ()=>{\n    describe(\"graph 1\", ()=>{\n        const g: DFAGraph = {\n            startState: {\n                children: [\n                    {\n                        label: \"1\",\n                        destination: {\n                            isAcceptState: true,\n                            children: [],\n                        }\n                    }\n                ],\n                isAcceptState: false,\n            }\n        } \n        it(\"1\", ()=>{\n            assert.equal(true, interpret(g, \"1\"));\n        });\n        it(\"0\", ()=>{\n            assert.equal(false, interpret(g, \"0\"));\n        });\n        it(\"empty\", ()=>{\n            assert.equal(false, interpret(g, \"\"));\n        });\n        it(\"10\", ()=>{\n            assert.equal(false, interpret(g, \"10\"));\n        });\n        it(\"101\", ()=>{\n            assert.equal(false, interpret(g, \"101\"));\n        });\n    });\n    describe(\"graph 2\", ()=>{\n        const g: DFAGraph = {\n            startState: {\n                children: [\n                    {\n                        label: \"1\",\n                        destination: {\n                            isAcceptState: true,\n                            children: [],\n                        }\n                    }\n                ],\n                isAcceptState: false,\n            }\n        } \n        g.startState.children[0].destination.children.push({\n            label: \"0\",\n            destination: g.startState,\n        });\n\n        it(\"101\", ()=>{\n            assert.equal(true, interpret(g, \"101\"));\n        });\n        it(\"10\", ()=>{\n            assert.equal(false, interpret(g, \"10\"));\n        });\n    });\n});\n\n\n// WEBPACK FOOTER //\n// ./test/test-ideal-dfa-interpreter.ts","/// <reference path=\"../typings/globals/mocha/index.d.ts\" />\nimport { loadPlugin, Plugin, CoreModel } from \"../src/\";\nimport * as assert from \"assert\";\n\nfunction roundTripJSO(plugin: Plugin, jso: any){\n    const jsoString = JSON.stringify(jso);\n\n    const model = new CoreModel(plugin, jso);\n    const serialString = JSON.stringify(model.serialize());\n    const model2 = new CoreModel(plugin, JSON.parse(serialString));\n    const serialString2 = JSON.stringify(model2.serialize());\n\n    assert.equal(serialString2, jsoString, \"checking roundtrip equal\");\n    return model2;\n}\n\ndescribe(\"Serialization\", ()=>{\n    it(\"one\", ()=>{\n        const test = roundTripJSO(loadPlugin(\"test/definitions.ts\"), {\n            format: \"sinap-file-format\",\n            kind: \"TODO: implement this\",\n            version: \"0.0.6\",\n            elements: [\n                {\n                    kind: \"Graph\",\n                    type: \"Graph1\",\n                    data: {\n                        startState: {kind: \"sinap-pointer\", index: 1},\n                    },\n                },\n                {\n                    kind: \"Node\",\n                    type: \"Node1\",\n                    data: {\n                        a: true,\n                    },\n                },\n            ]\n        });\n\n        assert.equal(true, test.elements[0].data['startState'].data.a);\n    });\n    \n    it(\"two\", ()=>{\n        const test = roundTripJSO(loadPlugin(\"test/definitions-for-serial.ts\"), {\n            format: \"sinap-file-format\",\n            kind: \"TODO: implement this\",\n            version: \"0.0.6\",\n            elements: [\n                {\n                    kind: \"Graph\",\n                    type: \"Graph1\",\n                    data: {\n                        startState: {kind: \"sinap-pointer\", index: 2},\n                    },\n                },\n                {\n                    kind: \"Node\",\n                    type: \"Node1\",\n                    data: {\n                        a: true,\n                    },\n                },\n                {\n                    kind: \"Node\",\n                    type: \"Node2\",\n                    data: {\n                        b: {\n                            n: {kind: \"sinap-pointer\", index: 1},\n                        },\n                    },\n                },\n            ]\n        });\n\n        assert.equal(true, test.elements[0].data['startState'].data.b.n.data.a);\n    });\n});\n\n\n// WEBPACK FOOTER //\n// ./test/test-serialization.ts","/// <reference path=\"../typings/globals/mocha/index.d.ts\" />\n\nimport * as assert from \"assert\";\nimport * as ts from \"typescript\";\nimport { getTypes, TypeEnvironment, UnionType, validateEdge, ObjectType } from \"../src/\"\n\ndescribe(\"isValidEdge\", ()=>{\n    const program = ts.createProgram([\"test/definitions.ts\"], {\n        target: ts.ScriptTarget.ES2016, module: ts.ModuleKind.CommonJS\n    });\n\n    const typeMap = getTypes(new TypeEnvironment(program.getTypeChecker()),\n                            program.getSourceFile(\"test/definitions.ts\"),\n                            new Set([\n                                \"Nodes\",\n                                \"Edges\",\n                                \"Graph\",\n                            ]));\n\n    const nodes = typeMap.get(\"Nodes\") as UnionType;\n    const node1 = nodes.types[0] as ObjectType;\n    const node3 = nodes.types[2] as ObjectType;\n    const node2 = nodes.types[1] as ObjectType;\n    const edges = typeMap.get(\"Edges\") as UnionType;\n    const edge1 = edges.types[0] as ObjectType;\n    const edge2 = edges.types[1] as ObjectType;\n\n    it(\"map edges\", ()=>{\n        assert.equal(true, validateEdge(edge1, node1, node2));\n        assert.equal(false, validateEdge(edge1, node1, node3));\n        assert.equal(true, validateEdge(edge1, node1, node2));\n        assert.equal(false, validateEdge(edge2, node1, node2));\n    });\n});\n\n\n// WEBPACK FOOTER //\n// ./test/test-validation.ts","module.exports = \"function getNS(a){\\n    if (global[a] === undefined){\\n        global[a] = {};\\n    }\\n    return global[a];\\n}\\n\\nfunction define(name, requires, func){\\n    let exports = getNS(name);\\n    let args = requires.slice(2).map(getNS);\\n    func(...[null, exports].concat(args));\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./sinap-includes/amd-loader.js\n// module id = 11\n// module chunks = 0","module.exports = \"import * as plugin from \\\"./plugin\\\";\\nimport * as types from \\\"./types-interfaces\\\";\\n\\n// TODO: consider\\nexport interface FunctionTypeInfo {\\n    args: types.Type[];\\n    returnValue: types.Type;\\n}\\n\\ninterface PropertyObject {\\n    [propName: string]: any;\\n}\\n\\ninterface Element extends PropertyObject {\\n    label: string;\\n}\\n\\ninterface Node extends Element {\\n    parents: Edge[];\\n    children: Edge[];\\n}\\n\\ninterface Edge extends Element {\\n    source: Node;\\n    destination: Node;\\n}\\n\\nfunction transferProperties(source: any, destination: PropertyObject) {\\n    const propSet = source.pluginProperties;\\n    for (const propName in propSet) {\\n        destination[propName] = propSet[propName];\\n    }\\n}\\n\\n/**\\n * This class is the graph presented to the user. For convenience of reading this data structure, there are duplicate\\n * and cyclical references. The constructor guarantees that these are consistent, but any changes after construction\\n * should be done in a consistent fashion. TODO: Make mutator methods for plugins to utilize once mutation of the graph\\n * during interpretation is added.\\n */\\nclass Graph implements PropertyObject {\\n    nodes: Node[];\\n    edges: Edge[];\\n    public constructor(serialGraph: any) {\\n\\n        serialGraph = serialGraph.graph;\\n        transferProperties(serialGraph, this);\\n\\n        this.nodes = serialGraph.nodes.map((oldNode: any) => {\\n            const result: Node = {\\n                label: oldNode.drawableProperties.Label,\\n                parents: [],\\n                children: []\\n            };\\n            transferProperties(oldNode, result);\\n            return result;\\n        });\\n\\n        // This seems like duplicate code but I'm not sure how to clean it up and combine it with the code above.\\n        this.edges = serialGraph.edges.map((oldEdge: any) => {\\n            const source = this.nodes[oldEdge.source];\\n            const destination = this.nodes[oldEdge.destination];\\n\\n            const result: Edge = {\\n                label: oldEdge.pluginProperties.Symbol,\\n                source: source,\\n                destination: destination\\n            };\\n\\n            transferProperties(oldEdge, result);\\n\\n            source.children.push(result);\\n            destination.parents.push(result);\\n            return result;\\n        });\\n    }\\n}\\n\\nexport function compile(g: any) {\\n    // TODO: cleanup, remove any, add try catch\\n    return plugin.compile(new Graph(g) as any);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./sinap-includes/plugin-stub.ts\n// module id = 12\n// module chunks = 0","module.exports = \"\\nexport type ProgramOutput = any;\\nexport type ProgramInput = any;\\n\\n/**\\n * This interface is to be used for debugging support and is expected to maintain mutable state.\\n */\\nexport interface RunningProgram {\\n    /**\\n     * These are the properties that will be displayed to the user. TODO: Allow for this to be more flexible if there are large numbers of properties available.\\n     */\\n    debugProperties: [string];\\n\\n    /**\\n     * Gets the result of the computation after the program completes. Behavior is undefined if called when isComplete is false.\\n     */\\n    result: ProgramOutput | null;\\n\\n    /**\\n     * Performs one unit of work in the forward direction. Advanced debugging support should be provided elsewhere (such as step over or continue).\\n     */\\n    step(): void;\\n\\n    /**\\n     * Performs one unit of work backwards. This method is optional since backwards debugging may be non-trivial for some plugins.\\n     */\\n    stepBack?(): void;\\n\\n    /**\\n     * Retrieves the value of a property enumerated in debugProperties.\\n     */\\n    getDebugValue(property: string): ProgramOutput;\\n}\\n\\n/**\\n * This represents a compiled program given an input computation graph. It should be immutable, though the RunningProgram returned by initDebugging may be mutable itself.\\n * If desired, a simple run method or initDebugging method can be provided and then fillInProgram will fill out the rest of the required fields/methods.\\n */\\nexport interface Program {\\n    /**\\n     * Any messages associated with graph compilation.\\n     */\\n    compilationMessages: string[];\\n\\n    /**\\n     * Runs the input according to the graph this program was derived from.\\n     */\\n    run(input: ProgramInput): ProgramOutput; // This should be filled in by fillInProgram if not present.\\n\\n    /**\\n     * Creates a new debugging instance. While the returned instance may itself be mutable, this object should have no change in state. This method is optional.\\n     */\\n    initDebugging?(input: ProgramInput): RunningProgram; // This is completely optional and must be checked.\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./sinap-includes/sinap.d.ts\n// module id = 13\n// module chunks = 0","module.exports = \"export interface Type {\\n    readonly name: string;\\n\\n    /**\\n     * Return if this type is assignable to that type\\n     */\\n    isAssignableTo(that: Type): boolean;\\n}\\n\\nexport interface UnionType {\\n    types: Type[];\\n}\\n\\nexport interface IntersectionType {\\n    types: Type[];\\n}\\n\\nexport interface ObjectType {\\n    readonly members: Map<string, Type>;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./sinap-includes/types-interfaces.d.ts\n// module id = 14\n// module chunks = 0","export class DFANode {\n\t/** Accept State */\n\tisAcceptState: boolean;\n\tchildren: DFAEdge[];\n}\n\nexport class DFAEdge {\n\t/** Symbol */\n\tlabel: string;\n\tdestination: DFANode;\n}\n\nexport class DFAGraph {\n    startState: DFANode;\n}\n\nexport type Nodes = DFANode\nexport type Edges = DFAEdge\nexport type Graph = DFAGraph\n\nexport function interpret(graph: DFAGraph, input: string){\n\tlet current = graph.startState;\n\n\tfor (const char of input){\n\t\t// look through all outgoing transitions and get the destinations\n\t\t// with matching labels\n\t\tconst possibleStates = current.children\n\t\t\t.filter(e => e.label === char)\n\t\t\t.map(e => e.destination);\n\t\t// no outgoing edges with matching label means the string isn't in the language\n\t\tif (possibleStates.length < 1) {\n\t\t\treturn false;\n\t\t} else if (possibleStates.length === 1) {\n\t\t\t// transisition to the next node\n\t\t\tcurrent = possibleStates[0];\n\t\t} else {\n\t\t\t// more than one means that this is an NFA\n\t\t\tthrow \"Not a DFA\";\n\t\t}\n\t}\n\t// check if we ended up in an accept state\n\treturn current.isAcceptState;\n}\n\n\n// WEBPACK FOOTER //\n// ./test/dfa-definitions.ts","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 16\n// module chunks = 0"],"sourceRoot":""}